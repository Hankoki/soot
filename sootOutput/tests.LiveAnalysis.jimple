public class tests.LiveAnalysis extends java.lang.Object
{

    public void <init>()
    {
        tests.LiveAnalysis this;

        this := @this: tests.LiveAnalysis;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private static void bar(int, int, int)
    {
        int a, b, c;

        a := @parameter0: int;

        b := @parameter1: int;

        c := @parameter2: int;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        java.lang.Integer $stack9, $stack12, $stack15, $stack18, $stack21, $stack24, $stack27;
        int $stack10, $stack13, $stack16, $stack31, b, a, t;
        java.lang.String $stack8, $stack11, $stack14, $stack17, $stack20, $stack23, $stack26;

        args := @parameter0: java.lang.String[];

        $stack8 = args[0];

        $stack9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.Integer: int intValue()>();

        $stack11 = args[1];

        $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.Integer: int intValue()>();

        $stack14 = args[2];

        $stack15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack14);

        $stack16 = virtualinvoke $stack15.<java.lang.Integer: int intValue()>();

        $stack17 = args[3];

        $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack17);

        virtualinvoke $stack18.<java.lang.Integer: int intValue()>();

        $stack20 = args[4];

        $stack21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack20);

        virtualinvoke $stack21.<java.lang.Integer: int intValue()>();

        $stack23 = args[5];

        $stack24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack23);

        b = virtualinvoke $stack24.<java.lang.Integer: int intValue()>();

        $stack26 = args[6];

        $stack27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack26);

        virtualinvoke $stack27.<java.lang.Integer: int intValue()>();

        a = $stack10 + $stack13;

        t = a * 5;

        if $stack10 != 0 goto label1;

        b = t + $stack16;

     label1:
        $stack31 = $stack13 + 1;

        staticinvoke <tests.LiveAnalysis: void bar(int,int,int)>(a, b, $stack31);

        return;
    }
}

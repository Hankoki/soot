public class LiveAnalysis extends java.lang.Object
{

    public void <init>()
    {
        LiveAnalysis r0;

        r0 := @this: LiveAnalysis;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void bar(int, int, int)
    {
        int i0, i1, i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.Integer $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        java.lang.String $r1, $r3, $r5, $r7, $r9, $r11, $r13;

        r0 := @parameter0: java.lang.String[];

        $r1 = r0[0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r3 = r0[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3);

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r5 = r0[2];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r5);

        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r7 = r0[3];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $r9 = r0[4];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $r11 = r0[5];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r11);

        i4 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r13 = r0[6];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r13);

        virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        i5 = $i0 + $i1;

        i6 = i5 * 5;

        if $i0 != 0 goto label1;

        i4 = i6 + $i2;

     label1:
        $i3 = $i1 + 1;

        staticinvoke <tests.LiveAnalysis: void bar(int,int,int)>(i5, i4, $i3);

        return;
    }
}

digraph "callgraph" {
    "<tests.CallGraph: void main(java.lang.String[])>";
    "<java.lang.Object: void <clinit>()>";
    "<tests.CallGraph: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<tests.CallGraph: void doStuff()>";
    "<tests.CallGraph: void main(java.lang.String[])>"->"<tests.CallGraph: void doStuff()>";
    "<tests.CallGraph: void doStuff()>"->"<java.lang.Object: void <clinit>()>";
    "<tests.D: void foo()>";
    "<tests.CallGraph: void doStuff()>"->"<tests.D: void foo()>";
    "<tests.D: void <init>()>";
    "<tests.CallGraph: void doStuff()>"->"<tests.D: void <init>()>";
    "<java.lang.Object: void <init>()>";
    "<tests.D: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<tests.D: void bar()>";
    "<tests.D: void foo()>"->"<tests.D: void bar()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void <clinit>()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<jdk.internal.misc.TerminatingThreadLocal: void <clinit>()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void _threadTerminated()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<jdk.internal.misc.TerminatingThreadLocal: void _threadTerminated()>";
    "<java.util.concurrent.ConcurrentHashMap$ValuesView: java.util.Iterator iterator()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<java.util.concurrent.ConcurrentHashMap$ValuesView: java.util.Iterator iterator()>";
    "<java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<java.util.concurrent.ConcurrentHashMap$EntrySetView: java.util.Iterator iterator()>";
    "<java.util.ArrayList: java.util.Iterator iterator()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<java.util.ArrayList: java.util.Iterator iterator()>";
    "<java.util.HashSet: java.util.Iterator iterator()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<java.util.HashSet: java.util.Iterator iterator()>";
    "<java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<java.util.concurrent.ConcurrentHashMap$KeySetView: java.util.Iterator iterator()>";
    "<java.util.Vector: java.util.Iterator iterator()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<java.util.Vector: java.util.Iterator iterator()>";
    "<java.util.AbstractList: java.util.Iterator iterator()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<java.util.AbstractList: java.util.Iterator iterator()>";
    "<java.lang.ThreadLocal: java.lang.Object get()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<java.lang.ThreadLocal: java.lang.Object get()>";
    "<java.lang.ThreadLocal: void <clinit>()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<java.lang.ThreadLocal: void <clinit>()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated()>"->"<java.lang.Object: void <clinit>()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void _threadTerminated()>"->"<java.lang.ThreadLocal: java.lang.Object get()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated(java.lang.Object)>";
    "<jdk.internal.misc.TerminatingThreadLocal: void _threadTerminated()>"->"<jdk.internal.misc.TerminatingThreadLocal: void threadTerminated(java.lang.Object)>";
    "<jdk.internal.misc.TerminatingThreadLocal: void <clinit>()>"->"<java.lang.ThreadLocal: void <clinit>()>";
    "<jdk.internal.misc.TerminatingThreadLocal$1: void <init>()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void <clinit>()>"->"<jdk.internal.misc.TerminatingThreadLocal$1: void <init>()>";
    "<jdk.internal.misc.TerminatingThreadLocal: void <clinit>()>"->"<java.lang.Object: void <clinit>()>";
    "<java.lang.ThreadLocal: void <init>()>";
    "<jdk.internal.misc.TerminatingThreadLocal$1: void <init>()>"->"<java.lang.ThreadLocal: void <init>()>";
}
